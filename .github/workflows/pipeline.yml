# ######################################################################################################################
# LICENSE
# ######################################################################################################################

#
# This file is part of devcontainer.
#
# The devcontainer is free software: you can redistribute it and/or modify it under the terms of the GNU Affero
# General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your
# option) any later version.
#
# The devcontainer is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU Affero General Public License along with devcontainer. If not, see
# <https://www.gnu.org/licenses/>.
#

# ######################################################################################################################
# WORKFLOW
# ######################################################################################################################

# ----------------------------------------------------------------------------------------------------------------------
# METADATA
# ----------------------------------------------------------------------------------------------------------------------

#
# GENERAL
#

name: Pipeline

#
# TRIGGER
#

on:
  pull_request:
  push:
    tags:
      - "v*"
  workflow_dispatch:

# ######################################################################################################################
# ENVIRONMENT VARIABLES
# ######################################################################################################################

env:
  DOCKER_BUILDKIT: 1
  PROJECT_DOCKER_ORG: ${{ vars.PROJECT_DOCKER_ORG }}
  PROJECT_DOCKER_PLATFORMS: ${{ vars.PROJECT_DOCKER_PLATFORMS }}
  PROJECT_NAME: ${{ vars.PROJECT_NAME }}

# ######################################################################################################################
# JOBS
# ######################################################################################################################

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Prepare
        uses: mundoalem/action-prepare@v1
        with:
          type: container
          job: lint

      - name: Lint
        run: |
          task lint

  scan:
    name: Scan
    runs-on: ubuntu-24.04-arm
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Prepare
        uses: mundoalem/action-prepare@v1
        with:
          type: container
          job: scan

      - name: Scan
        run: |
          task scan

  pre-ci:
    name: Pre-CI
    runs-on: ubuntu-24.04-arm
    needs: scan
    outputs:
      platforms: ${{ steps.platforms.outputs.value }}
    steps:
      - name: Get Platforms as JSON
        id: platforms
        run: |
          echo "value=[\"$(echo $PROJECT_DOCKER_PLATFORMS | sed 's/,/\",\"/g')\"]" >> $GITHUB_OUTPUT

  ci:
    name: CI
    runs-on: ubuntu-24.04-arm
    needs: pre-ci
    strategy:
      matrix:
        platforms: ${{ fromJSON(needs.pre-ci.outputs.platforms) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Prepare
        uses: mundoalem/action-prepare@v1
        with:
          type: container
          job: ci

      - name: Build
        env:
          PROJECT_DOCKER_PLATFORMS: ${{ matrix.platforms }}
        run: |
          task build

      - name: Test
        env:
          PROJECT_DOCKER_PLATFORMS: ${{ matrix.platforms }}
        run: |
          task test

  cd:
    name: CD
    runs-on: ubuntu-24.04-arm
    needs: ci
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Prepare
        uses: mundoalem/action-prepare@v1
        with:
          type: container
          job: cd

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Release
        run: |
          task release
